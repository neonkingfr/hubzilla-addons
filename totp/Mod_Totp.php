<?php

namespace Zotlabs\Module;

use Zotlabs\Lib\Apps;
use Zotlabs\Lib\AConfig;

class TOTPController extends \Zotlabs\Web\Controller {
	function totp_installed() {
		$id = local_channel();
		if (!$id) return false;
		return Apps::addon_app_installed($id, 'totp');
		}
	function get_secret($acct_id) {
		return AConfig::get($acct_id, 'totp', 'secret', null);
		}
	function get() {
		if (!$this->totp_installed()) return;
		$account = \App::get_account();
		if (!$account) goaway(z_root());
		$o .= replace_macros(get_markup_template('totp.tpl','addon/totp'),
			[
			'$header' => t('TOTP Two-Step Verification'),
			'$desc'   => t('Enter the 2-step verification generated by your authenticator app:'),
			'$success' => t('Success!'),
			'$fail' => t('Invalid code, please try again.'),
			'$maxfails' => t('Too many invalid codes...'),
			'$submit' => t('Verify')
			]);
		return $o;
		}
	function post() {
		# AJAX POST handler
		if (!$this->totp_installed())
			json_return_and_die(array("status" => false));
		$account = \App::get_account();
		if (!$account) json_return_and_die(array("status" => false));
		if (isset($_POST['totp_code'])) {
			require_once("addon/totp/class_totp.php");
			$ref = intval($_POST['totp_code']);
			$secret = $this->get_secret($account['account_id']);
			$totp = new \TOTP("channels.gnatter.org", "Gnatter Channels",
					$account['account_email'], $secret, 30, 6);
			$match = ($totp->authcode($totp->timestamp()) == $ref);
			if ($match) $_SESSION['2FA_VERIFIED'] = true;
			json_return_and_die(array("match" => ($match ? "1" : "0")));
			}
		json_return_and_die(array("status" => false));
		}
	}
?>
