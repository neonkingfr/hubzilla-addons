<?php

namespace Zotlabs\Module;

class TOTPController extends \Zotlabs\Web\Controller {
	function get() {
		$o .= replace_macros(get_markup_template('totp.tpl','addon/totp'),
			[
			'$header' => t('TOTP Two-Step Verification'),
			'$desc'   => t('Enter the 2-step verification generated by your authenticator app:'),
			'$success' => t('Success!'),
			'$fail' => t('Invalid code, please try again.'),
			'$submit' => t('Verify')
			]);
		return $o;
		}
	function post() {
		# AJAX POST handler
		if (!local_channel()) return;
		$account = \App::get_account();
		if (!$account) return;
		$id = intval($account['account_id']);
		if (isset($_POST['active'])) {
			$active = intval($_POST['active']);
			$r = q("update account set account_2fa_active=%d where account_id=%d",
				$active, $id);
			json_return_and_die(array("active" => $active));
			}
		if (isset($_POST['secret'])) {
			require_once("library/totp.php");
			$totp = new TOTP("channels.gnatter.org", "Gnatter Channels",
					$account['account_email'], null, 30, 6);
			$r = q("update account set account_2fa_secret='%s' where account_id=%d",
					$totp->secret, $id);
			json_return_and_die(
				array(
					"secret" => $totp->secret,
					"pngurl" => totp_qrcode_png($totp->uri())
					)
				);
			}
		if (isset($_POST['totp_code'])) {
			require_once("library/totp.php");
			$ref = intval($_POST['totp_code']);
			$totp = new \TOTP("channels.gnatter.org", "Gnatter Channels",
					$account['account_email'],
					$account['account_2fa_secret'], 30, 6);
			$code = $totp->authcode($totp->timestamp());
			json_return_and_die(array("match" => ($code == $ref ? "1" : "0")));
			}
		json_return_and_die(array("ret" => "123"));
		}
	}
?>
